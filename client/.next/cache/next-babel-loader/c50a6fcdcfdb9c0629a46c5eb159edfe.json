{"ast":null,"code":"var _jsxFileName = \"/home/davy/planning-app/client/src/pages/issues.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { gql, useQuery } from '@apollo/client';\nimport PropTypes from 'prop-types';\nimport { withNavigationViewController } from '@atlaskit/navigation-next';\nimport PageHeader from '@atlaskit/page-header';\nimport TextField from '@atlaskit/textfield';\nimport { productIssuesView, Layout, ProjectFilter, VersionFilter, StatusFilter, TeamFilter, IssueTable, LoadButton } from '../components';\nconst ROWS_PER_PAGE = 50;\nexport const ISSUE_ROW_DATA = gql`\n  fragment IssueRow on Issue {\n    id\n    key\n    fields {\n      summary\n      issuetype {\n        id\n        name\n      }\n      priority {\n        id\n        name\n      }\n      status {\n        name\n        statusCategory {\n          id\n        }\n      }\n      fixVersions {\n        id\n        name\n      }\n      assignee {\n        key\n        displayName\n      }\n    }\n  }\n`;\nexport const ISSUE_PAGINATION = gql`\n  fragment IssuePagination on IssueConnection {\n    startAt\n    maxResults\n    total\n  }\n`;\nconst GET_ISSUES = gql`\n  query GetIssues(\n    $projectId: String\n    $versionId: String\n    $statusId: String\n    $teamId: String\n    $resourceId: String\n    $startAt: Int\n    $maxResults: Int\n  ) {\n    projectId @client @export(as: \"projectId\")\n    versionId @client @export(as: \"versionId\")\n    statusId @client @export(as: \"statusId\")\n    teamId @client @export(as: \"teamId\")\n    issues(\n      projectId: $projectId\n      versionId: $versionId\n      statusId: $statusId\n      teamId: $teamId\n      resourceId: $resourceId\n      startAt: $startAt\n      maxResults: $maxResults\n    ) {\n      ...IssuePagination\n      issues {\n        ...IssueRow\n      }\n    }\n  }\n  ${ISSUE_PAGINATION}\n  ${ISSUE_ROW_DATA}\n`;\n\nconst barContent = __jsx(\"div\", {\n  style: {\n    display: 'flex'\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 95\n  },\n  __self: this\n}, __jsx(\"div\", {\n  style: {\n    flexBasis: 150,\n    marginRight: 8\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 96\n  },\n  __self: this\n}, __jsx(TextField, {\n  isCompact: true,\n  placeholder: \"Filter\",\n  \"aria-label\": \"Filter\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 97\n  },\n  __self: this\n})), __jsx(ProjectFilter, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 99\n  },\n  __self: this\n}), __jsx(VersionFilter, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 100\n  },\n  __self: this\n}), __jsx(StatusFilter, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 101\n  },\n  __self: this\n}), __jsx(TeamFilter, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 102\n  },\n  __self: this\n}));\n\nfunction Issues({\n  navigationViewController\n}) {\n  const {\n    0: length,\n    1: setLength\n  } = useState(0);\n  const {\n    loading,\n    error,\n    data,\n    fetchMore\n  } = useQuery(GET_ISSUES, {\n    variables: {\n      maxResults: ROWS_PER_PAGE\n    }\n  });\n  useEffect(() => {\n    if (data && data.issues && data.issues.issues.length) {\n      setLength(data.issues.issues.length);\n    }\n\n    navigationViewController.setView(productIssuesView.id);\n  }, [navigationViewController, data]);\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, __jsx(PageHeader, {\n    bottomBar: barContent,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, \"Search Issues\"), __jsx(IssueTable, {\n    loading: loading,\n    error: error,\n    issues: data && data.issues,\n    rowsPerPage: ROWS_PER_PAGE + length,\n    startAt: length,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }), data && data.issues && data.issues.total > length && __jsx(LoadButton, {\n    fetchMore: fetchMore,\n    startAt: length,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }));\n}\n\nIssues.propTypes = {\n  navigationViewController: PropTypes.objectOf(PropTypes.arrayOf).isRequired\n};\nexport default withNavigationViewController(Issues);","map":{"version":3,"sources":["/home/davy/planning-app/client/src/pages/issues.js"],"names":["React","useState","useEffect","gql","useQuery","PropTypes","withNavigationViewController","PageHeader","TextField","productIssuesView","Layout","ProjectFilter","VersionFilter","StatusFilter","TeamFilter","IssueTable","LoadButton","ROWS_PER_PAGE","ISSUE_ROW_DATA","ISSUE_PAGINATION","GET_ISSUES","barContent","display","flexBasis","marginRight","Issues","navigationViewController","length","setLength","loading","error","data","fetchMore","variables","maxResults","issues","setView","id","total","propTypes","objectOf","arrayOf","isRequired"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,GAAT,EAAcC,QAAd,QAA8B,gBAA9B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,4BAAT,QAA6C,2BAA7C;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AAEA,SACEC,iBADF,EAEEC,MAFF,EAGEC,aAHF,EAIEC,aAJF,EAKEC,YALF,EAMEC,UANF,EAOEC,UAPF,EAQEC,UARF,QASO,eATP;AAWA,MAAMC,aAAa,GAAG,EAAtB;AAEA,OAAO,MAAMC,cAAc,GAAGf,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAA3B;AAgCP,OAAO,MAAMgB,gBAAgB,GAAGhB,GAAI;;;;;;CAA7B;AAQP,MAAMiB,UAAU,GAAGjB,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IA6BnBgB,gBAAiB;IACjBD,cAAe;CA9BnB;;AAiCA,MAAMG,UAAU,GACd;AAAK,EAAA,KAAK,EAAE;AAAEC,IAAAA,OAAO,EAAE;AAAX,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAK,EAAA,KAAK,EAAE;AAAEC,IAAAA,SAAS,EAAE,GAAb;AAAkBC,IAAAA,WAAW,EAAE;AAA/B,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,MAAC,SAAD;AAAW,EAAA,SAAS,MAApB;AAAqB,EAAA,WAAW,EAAC,QAAjC;AAA0C,gBAAW,QAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF,EAIE,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAJF,EAKE,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EALF,EAME,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EANF,EAOE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAPF,CADF;;AAYA,SAASC,MAAT,CAAgB;AAAEC,EAAAA;AAAF,CAAhB,EAA8C;AAC5C,QAAM;AAAA,OAACC,MAAD;AAAA,OAASC;AAAT,MAAsB3B,QAAQ,CAAC,CAAD,CAApC;AACA,QAAM;AACJ4B,IAAAA,OADI;AACKC,IAAAA,KADL;AACYC,IAAAA,IADZ;AACkBC,IAAAA;AADlB,MAEF5B,QAAQ,CAACgB,UAAD,EAAa;AACvBa,IAAAA,SAAS,EAAE;AAAEC,MAAAA,UAAU,EAAEjB;AAAd;AADY,GAAb,CAFZ;AAMAf,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI6B,IAAI,IAAIA,IAAI,CAACI,MAAb,IAAuBJ,IAAI,CAACI,MAAL,CAAYA,MAAZ,CAAmBR,MAA9C,EAAsD;AACpDC,MAAAA,SAAS,CAACG,IAAI,CAACI,MAAL,CAAYA,MAAZ,CAAmBR,MAApB,CAAT;AACD;;AACDD,IAAAA,wBAAwB,CAACU,OAAzB,CAAiC3B,iBAAiB,CAAC4B,EAAnD;AACD,GALQ,EAKN,CAACX,wBAAD,EAA2BK,IAA3B,CALM,CAAT;AAOA,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AAAY,IAAA,SAAS,EAAEV,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE,MAAC,UAAD;AACE,IAAA,OAAO,EAAEQ,OADX;AAEE,IAAA,KAAK,EAAEC,KAFT;AAGE,IAAA,MAAM,EAAEC,IAAI,IAAIA,IAAI,CAACI,MAHvB;AAIE,IAAA,WAAW,EAAElB,aAAa,GAAGU,MAJ/B;AAKE,IAAA,OAAO,EAAEA,MALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EASGI,IAAI,IAAIA,IAAI,CAACI,MAAb,IAAuBJ,IAAI,CAACI,MAAL,CAAYG,KAAZ,GAAoBX,MAA3C,IACC,MAAC,UAAD;AAAY,IAAA,SAAS,EAAEK,SAAvB;AAAkC,IAAA,OAAO,EAAEL,MAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ,CADF;AAeD;;AAEDF,MAAM,CAACc,SAAP,GAAmB;AACjBb,EAAAA,wBAAwB,EAAErB,SAAS,CAACmC,QAAV,CAAmBnC,SAAS,CAACoC,OAA7B,EAAsCC;AAD/C,CAAnB;AAIA,eAAepC,4BAA4B,CAACmB,MAAD,CAA3C","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { gql, useQuery } from '@apollo/client'\nimport PropTypes from 'prop-types'\nimport { withNavigationViewController } from '@atlaskit/navigation-next'\nimport PageHeader from '@atlaskit/page-header'\nimport TextField from '@atlaskit/textfield'\n\nimport {\n  productIssuesView,\n  Layout,\n  ProjectFilter,\n  VersionFilter,\n  StatusFilter,\n  TeamFilter,\n  IssueTable,\n  LoadButton,\n} from '../components'\n\nconst ROWS_PER_PAGE = 50\n\nexport const ISSUE_ROW_DATA = gql`\n  fragment IssueRow on Issue {\n    id\n    key\n    fields {\n      summary\n      issuetype {\n        id\n        name\n      }\n      priority {\n        id\n        name\n      }\n      status {\n        name\n        statusCategory {\n          id\n        }\n      }\n      fixVersions {\n        id\n        name\n      }\n      assignee {\n        key\n        displayName\n      }\n    }\n  }\n`\n\nexport const ISSUE_PAGINATION = gql`\n  fragment IssuePagination on IssueConnection {\n    startAt\n    maxResults\n    total\n  }\n`\n\nconst GET_ISSUES = gql`\n  query GetIssues(\n    $projectId: String\n    $versionId: String\n    $statusId: String\n    $teamId: String\n    $resourceId: String\n    $startAt: Int\n    $maxResults: Int\n  ) {\n    projectId @client @export(as: \"projectId\")\n    versionId @client @export(as: \"versionId\")\n    statusId @client @export(as: \"statusId\")\n    teamId @client @export(as: \"teamId\")\n    issues(\n      projectId: $projectId\n      versionId: $versionId\n      statusId: $statusId\n      teamId: $teamId\n      resourceId: $resourceId\n      startAt: $startAt\n      maxResults: $maxResults\n    ) {\n      ...IssuePagination\n      issues {\n        ...IssueRow\n      }\n    }\n  }\n  ${ISSUE_PAGINATION}\n  ${ISSUE_ROW_DATA}\n`\n\nconst barContent = (\n  <div style={{ display: 'flex' }}>\n    <div style={{ flexBasis: 150, marginRight: 8 }}>\n      <TextField isCompact placeholder=\"Filter\" aria-label=\"Filter\" />\n    </div>\n    <ProjectFilter />\n    <VersionFilter />\n    <StatusFilter />\n    <TeamFilter />\n  </div>\n)\n\nfunction Issues({ navigationViewController }) {\n  const [length, setLength] = useState(0)\n  const {\n    loading, error, data, fetchMore,\n  } = useQuery(GET_ISSUES, {\n    variables: { maxResults: ROWS_PER_PAGE },\n  })\n\n  useEffect(() => {\n    if (data && data.issues && data.issues.issues.length) {\n      setLength(data.issues.issues.length)\n    }\n    navigationViewController.setView(productIssuesView.id)\n  }, [navigationViewController, data])\n\n  return (\n    <Layout>\n      <PageHeader bottomBar={barContent}>Search Issues</PageHeader>\n      <IssueTable\n        loading={loading}\n        error={error}\n        issues={data && data.issues}\n        rowsPerPage={ROWS_PER_PAGE + length}\n        startAt={length}\n      />\n      {data && data.issues && data.issues.total > length && (\n        <LoadButton fetchMore={fetchMore} startAt={length} />\n      )}\n    </Layout>\n  )\n}\n\nIssues.propTypes = {\n  navigationViewController: PropTypes.objectOf(PropTypes.arrayOf).isRequired,\n}\n\nexport default withNavigationViewController(Issues)\n"]},"metadata":{},"sourceType":"module"}