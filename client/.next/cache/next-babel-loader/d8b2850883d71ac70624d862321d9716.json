{"ast":null,"code":"var _jsxFileName = \"/home/davy/planning-app/client/src/pages/absences.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useQuery, gql } from '@apollo/client';\nimport Layout from '../components/MyLayout';\nexport const GET_ABSENCES = gql`\n  query getAbsences($id: ID!) {\n    absences(id: $id) {\n      key\n      date\n    }\n  }\n`;\nexport default (() => {\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_ABSENCES, {\n    variables: {\n      id: 'davy.hausser'\n    }\n  });\n  if (loading) return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"Loading\");\n\n  if (error) {\n    return __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, \"Error:\", ' ', error.message);\n  }\n\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"Absences\"), __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, data.absences.map(({\n    key,\n    date\n  }) => __jsx(\"li\", {\n    key: key,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, `${date}`))));\n});","map":{"version":3,"sources":["/home/davy/planning-app/client/src/pages/absences.js"],"names":["useQuery","gql","Layout","GET_ABSENCES","loading","error","data","variables","id","message","absences","map","key","date"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,GAAnB,QAA8B,gBAA9B;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AAEA,OAAO,MAAMC,YAAY,GAAGF,GAAI;;;;;;;CAAzB;AASP,gBAAe,MAAM;AACnB,QAAM;AAAEG,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BN,QAAQ,CAACG,YAAD,EAAe;AAAEI,IAAAA,SAAS,EAAE;AAAEC,MAAAA,EAAE,EAAE;AAAN;AAAb,GAAf,CAAzC;AACA,MAAIJ,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAP;;AACb,MAAIC,KAAJ,EAAW;AACT,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAEG,GAFH,EAGGA,KAAK,CAACI,OAHT,CADF;AAOD;;AACD,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,IAAI,CAACI,QAAL,CAAcC,GAAd,CAAkB,CAAC;AAAEC,IAAAA,GAAF;AAAOC,IAAAA;AAAP,GAAD,KAAmB;AAAI,IAAA,GAAG,EAAED,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgB,GAAEC,IAAK,EAAvB,CAArC,CADH,CAFF,CADF;AAQD,CApBD","sourcesContent":["import { useQuery, gql } from '@apollo/client'\nimport Layout from '../components/MyLayout'\n\nexport const GET_ABSENCES = gql`\n  query getAbsences($id: ID!) {\n    absences(id: $id) {\n      key\n      date\n    }\n  }\n`\n\nexport default () => {\n  const { loading, error, data } = useQuery(GET_ABSENCES, { variables: { id: 'davy.hausser' } })\n  if (loading) return <p>Loading</p>\n  if (error) {\n    return (\n      <p>\n        Error:\n        {' '}\n        {error.message}\n      </p>\n    )\n  }\n  return (\n    <Layout>\n      <h1>Absences</h1>\n      <ul>\n        {data.absences.map(({ key, date }) => <li key={key}>{`${date}`}</li>)}\n      </ul>\n    </Layout>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}