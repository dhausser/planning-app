{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/davy/planning-app/client/src/pages/absences.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  query getAbsences($id: ID!) {\\n    absences(id: $id) {\\n      date\\n    }\\n  }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useState } from 'react';\nimport { useQuery, gql } from '@apollo/client';\nimport Select from 'react-select';\nimport Layout from '../components/MyLayout';\nimport { GET_RESOURCES } from './resources';\nconst GET_ABSENCES = gql(_templateObject());\nexport default (() => {\n  const {\n    0: resource,\n    1: setResource\n  } = useState({\n    key: 'davy.hausser',\n    name: 'Davy Hausser'\n  });\n  let options;\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_ABSENCES, {\n    variables: {\n      id: resource.key\n    }\n  });\n  const {\n    loading: resourcesLoading,\n    error: resourcesError,\n    data: resourcesData\n  } = useQuery(GET_RESOURCES);\n  if (loading || resourcesLoading) return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"Loading\");\n\n  if (error || resourcesError) {\n    return __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, \"Error:\", ' ', error.message || resourcesError.message);\n  }\n\n  if (resourcesData && resourcesData.resources) {\n    options = resourcesData.resources.map(({\n      key,\n      name\n    }) => ({\n      value: key,\n      label: name\n    }));\n  }\n\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Absences\"), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, resource.name), __jsx(Select, {\n    options: options,\n    defaultValue: resource,\n    value: resource,\n    onChange: ({\n      value,\n      label\n    }) => setResource({\n      key: value,\n      name: label\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, data.absences.map(({\n    date\n  }) => __jsx(\"li\", {\n    key: date,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"\".concat(date)))));\n});","map":{"version":3,"sources":["/home/davy/planning-app/client/src/pages/absences.js"],"names":["useState","useQuery","gql","Select","Layout","GET_RESOURCES","GET_ABSENCES","resource","setResource","key","name","options","loading","error","data","variables","id","resourcesLoading","resourcesError","resourcesData","message","resources","map","value","label","absences","date"],"mappings":";;;;;;;;;;;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,QAAT,EAAmBC,GAAnB,QAA8B,gBAA9B;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,SAASC,aAAT,QAA8B,aAA9B;AAEA,MAAMC,YAAY,GAAGJ,GAAH,mBAAlB;AAQA,gBAAe,MAAM;AACnB,QAAM;AAAA,OAACK,QAAD;AAAA,OAAWC;AAAX,MAA0BR,QAAQ,CAAC;AAAES,IAAAA,GAAG,EAAE,cAAP;AAAuBC,IAAAA,IAAI,EAAE;AAA7B,GAAD,CAAxC;AACA,MAAIC,OAAJ;AACA,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2Bb,QAAQ,CAACK,YAAD,EAAe;AAAES,IAAAA,SAAS,EAAE;AAAEC,MAAAA,EAAE,EAAET,QAAQ,CAACE;AAAf;AAAb,GAAf,CAAzC;AACA,QAAM;AAAEG,IAAAA,OAAO,EAAEK,gBAAX;AAA6BJ,IAAAA,KAAK,EAAEK,cAApC;AAAoDJ,IAAAA,IAAI,EAAEK;AAA1D,MAA4ElB,QAAQ,CAACI,aAAD,CAA1F;AACA,MAAIO,OAAO,IAAIK,gBAAf,EAAiC,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAP;;AACjC,MAAIJ,KAAK,IAAIK,cAAb,EAA6B;AAC3B,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAEG,GAFH,EAGGL,KAAK,CAACO,OAAN,IAAiBF,cAAc,CAACE,OAHnC,CADF;AAOD;;AACD,MAAID,aAAa,IAAIA,aAAa,CAACE,SAAnC,EAA8C;AAC5CV,IAAAA,OAAO,GAAGQ,aAAa,CAACE,SAAd,CAAwBC,GAAxB,CAA4B,CAAC;AAAEb,MAAAA,GAAF;AAAOC,MAAAA;AAAP,KAAD,MAAoB;AAAEa,MAAAA,KAAK,EAAEd,GAAT;AAAce,MAAAA,KAAK,EAAEd;AAArB,KAApB,CAA5B,CAAV;AACD;;AACD,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIH,QAAQ,CAACG,IAAb,CAFF,EAGE,MAAC,MAAD;AACE,IAAA,OAAO,EAAEC,OADX;AAEE,IAAA,YAAY,EAAEJ,QAFhB;AAGE,IAAA,KAAK,EAAEA,QAHT;AAIE,IAAA,QAAQ,EAAE,CAAC;AAAEgB,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAAD,KAAsBhB,WAAW,CAAC;AAAEC,MAAAA,GAAG,EAAEc,KAAP;AAAcb,MAAAA,IAAI,EAAEc;AAApB,KAAD,CAJ7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGV,IAAI,CAACW,QAAL,CAAcH,GAAd,CAAkB,CAAC;AAAEI,IAAAA;AAAF,GAAD,KAAc;AAAI,IAAA,GAAG,EAAEA,IAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAmBA,IAAnB,EAAhC,CADH,CATF,CADF;AAeD,CAjCD","sourcesContent":["import { useState } from 'react'\nimport { useQuery, gql } from '@apollo/client'\nimport Select from 'react-select'\nimport Layout from '../components/MyLayout'\nimport { GET_RESOURCES } from './resources'\n\nconst GET_ABSENCES = gql`\n  query getAbsences($id: ID!) {\n    absences(id: $id) {\n      date\n    }\n  }\n`\n\nexport default () => {\n  const [resource, setResource] = useState({ key: 'davy.hausser', name: 'Davy Hausser' })\n  let options\n  const { loading, error, data } = useQuery(GET_ABSENCES, { variables: { id: resource.key } })\n  const { loading: resourcesLoading, error: resourcesError, data: resourcesData } = useQuery(GET_RESOURCES)\n  if (loading || resourcesLoading) return <p>Loading</p>\n  if (error || resourcesError) {\n    return (\n      <p>\n        Error:\n        {' '}\n        {error.message || resourcesError.message}\n      </p>\n    )\n  }\n  if (resourcesData && resourcesData.resources) {\n    options = resourcesData.resources.map(({ key, name }) => ({ value: key, label: name }))\n  }\n  return (\n    <Layout>\n      <h1>Absences</h1>\n      <p>{resource.name}</p>\n      <Select\n        options={options}\n        defaultValue={resource}\n        value={resource}\n        onChange={({ value, label }) => setResource({ key: value, name: label })}\n      />\n      <ul>\n        {data.absences.map(({ date }) => <li key={date}>{`${date}`}</li>)}\n      </ul>\n    </Layout>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}