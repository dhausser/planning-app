{"ast":null,"code":"var _jsxFileName = \"/home/davy/planning-app/client/src/pages/projects.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nimport { useApolloClient, useQuery, gql } from '@apollo/client';\nimport Layout from '../components/MyLayout';\nconst PROJECT_TILE_DATA = gql`\n  fragment ProjectTile on Project {\n    id\n    key\n    name\n    projectTypeKey\n  }\n`;\nconst GET_PROJECTS = gql`\n  query GetProjects {\n    projects {\n      ...ProjectTile\n      avatarUrls {\n        small\n      }\n    }\n  }\n  ${PROJECT_TILE_DATA}\n`;\nexport default (() => {\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_PROJECTS);\n  if (loading) return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"Loading...\");\n  if (error) return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, error.message);\n\n  if (data && data.projects) {\n    console.log(data.projects);\n  }\n\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, __jsx(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Projects\"), __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, data && data.projects.map(({\n    key,\n    name\n  }) => __jsx(\"li\", {\n    key: key,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, key, ' ', name))));\n});","map":{"version":3,"sources":["/home/davy/planning-app/client/src/pages/projects.js"],"names":["Link","useApolloClient","useQuery","gql","Layout","PROJECT_TILE_DATA","GET_PROJECTS","loading","error","data","message","projects","console","log","map","key","name"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,SAASC,eAAT,EAA0BC,QAA1B,EAAoCC,GAApC,QAA+C,gBAA/C;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AAEA,MAAMC,iBAAiB,GAAGF,GAAI;;;;;;;CAA9B;AASA,MAAMG,YAAY,GAAGH,GAAI;;;;;;;;;IASrBE,iBAAkB;CATtB;AAaA,gBAAe,MAAM;AACnB,QAAM;AAAEE,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BP,QAAQ,CAACI,YAAD,CAAzC;AAEA,MAAIC,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,MAAIC,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIA,KAAK,CAACE,OAAV,CAAP;;AAEX,MAAID,IAAI,IAAIA,IAAI,CAACE,QAAjB,EAA2B;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAI,CAACE,QAAjB;AACD;;AAED,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,IAAI,IAAIA,IAAI,CAACE,QAAL,CAAcG,GAAd,CAAkB,CAAC;AAAEC,IAAAA,GAAF;AAAOC,IAAAA;AAAP,GAAD,KACzB;AAAI,IAAA,GAAG,EAAED,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,GADH,EAEG,GAFH,EAGGC,IAHH,CADO,CADX,CAFF,CADF;AAcD,CAxBD","sourcesContent":["import Link from 'next/link'\nimport { useApolloClient, useQuery, gql } from '@apollo/client'\nimport Layout from '../components/MyLayout'\n\nconst PROJECT_TILE_DATA = gql`\n  fragment ProjectTile on Project {\n    id\n    key\n    name\n    projectTypeKey\n  }\n`\n\nconst GET_PROJECTS = gql`\n  query GetProjects {\n    projects {\n      ...ProjectTile\n      avatarUrls {\n        small\n      }\n    }\n  }\n  ${PROJECT_TILE_DATA}\n`\n\n\nexport default () => {\n  const { loading, error, data } = useQuery(GET_PROJECTS)\n\n  if (loading) return <p>Loading...</p>\n  if (error) return <p>{error.message}</p>\n\n  if (data && data.projects) {\n    console.log(data.projects)\n  }\n\n  return (\n    <Layout>\n      <h2>Projects</h2>\n      <ul>\n        {data && data.projects.map(({ key, name }) => (\n          <li key={key}>\n            {key}\n            {' '}\n            {name}\n          </li>\n        ))}\n      </ul>\n    </Layout>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}