{"ast":null,"code":"var _jsxFileName = \"/home/davy/planning-app/client/src/pages/resources.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\n/* eslint-disable react/prop-types */\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport { gql, useQuery, useMutation } from '@apollo/client';\nimport styled from 'styled-components';\nimport { withNavigationViewController } from '@atlaskit/navigation-next';\nimport DynamicTable from '@atlaskit/dynamic-table';\nimport Avatar from '@atlaskit/avatar';\nimport EmptyState from '@atlaskit/empty-state';\nimport PageHeader from '@atlaskit/page-header';\nimport TextField from '@atlaskit/textfield';\nimport Button, { ButtonGroup } from '@atlaskit/button';\nimport ModalDialog, { ModalFooter, ModalTransition } from '@atlaskit/modal-dialog';\nimport Form, { Field } from '@atlaskit/form';\nimport Select from '@atlaskit/select';\nimport UserPicker from '@atlaskit/user-picker';\nimport Spinner from '@atlaskit/spinner';\nimport { TeamFilter, projectHomeView, Layout } from '../components';\nimport { getResource } from '../components/issue/user-picker';\nconst GET_TEAM_FILTER = gql`\n  {\n    teamId @client\n  }\n`;\nconst GET_RESOURCES = gql`\n  query GetResources($teamId: String) {\n    teamId @client @export(as: \"teamId\")\n    resources(teamId: $teamId) {\n      key\n      name\n      team\n    }\n  }\n`;\nconst GET_TEAMS = gql`\n  query GetTeams {\n    teams {\n      id\n    }\n  }\n`;\nconst INSERT_RESOURCE = gql`\n  mutation InsertResource(\n    $id: ID!\n    $firstname: String!\n    $lastname: String!\n    $email: String!\n    $team: String!\n  ) {\n    insertResource(\n      id: $id\n      firstname: $firstname\n      lastname: $lastname\n      email: $email\n      team: $team\n    ) {\n      key\n    }\n  }\n`;\nconst UPDATE_RESOURCE = gql`\n  mutation UpdateResource(\n    $id: ID!\n    $firstname: String!\n    $lastname: String!\n    $email: String!\n    $team: String!\n  ) {\n    updateResource(\n      id: $id\n      firstname: $firstname\n      lastname: $lastname\n      email: $email\n      team: $team\n    ) {\n      key\n    }\n  }\n`;\nconst DELETE_RESOURCE = gql`\n  mutation DeleteResource($id: ID!) {\n    deleteResource(id: $id) {\n      key\n    }\n  }\n`;\nconst GET_ASSIGNABLE_USERS = gql`\n  query GetAssignableUsers($project: String) {\n    assignableUsers(project: $project) {\n      key\n      displayName\n    }\n  }\n`;\nconst NameWrapper = styled.span`\n  display: flex;\n  align-items: center;\n  margin-right: 8px;\n`;\n\nconst barContent = __jsx(\"div\", {\n  style: {\n    display: 'flex'\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 114\n  },\n  __self: this\n}, __jsx(\"div\", {\n  style: {\n    flexBasis: 150,\n    marginRight: 8\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 115\n  },\n  __self: this\n}, __jsx(TextField, {\n  isCompact: true,\n  placeholder: \"Filter\",\n  \"aria-label\": \"Filter\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 116\n  },\n  __self: this\n})), __jsx(TeamFilter, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 118\n  },\n  __self: this\n}));\n\nfunction createKey(input) {\n  return input ? input.replace(/^(the|a|an)/, '').replace(/\\s/g, '') : input;\n}\n\nconst head = {\n  cells: [{\n    key: 'name',\n    content: 'Name',\n    isSortable: true\n  }, {\n    key: 'team',\n    content: 'Team',\n    isSortable: true,\n    width: 15\n  }, {\n    key: 'actions',\n    content: 'Actions',\n    width: 15\n  }]\n};\n\nconst rows = (resources, setIsEditOpen, setIsDeleteOpen) => resources.map(({\n  key,\n  name,\n  team\n}) => ({\n  key,\n  cells: [{\n    key: createKey(name),\n    content: __jsx(NameWrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, __jsx(Avatar, {\n      name: name,\n      size: \"medium\",\n      src: `https://jira.cdprojektred.com//secure/useravatar?ownerId=${key}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }), __jsx(Link, {\n      to: `/resource/${key}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, name))\n  }, {\n    key: createKey(team),\n    content: team\n  }, {\n    key: 'actions',\n    content: __jsx(ButtonGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, __jsx(Button, {\n      appearance: \"default\",\n      onClick: () => setIsEditOpen(true),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, \"Edit\"), __jsx(Button, {\n      appearance: \"default\",\n      onClick: () => setIsDeleteOpen(true),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, \"Delete\"))\n  }]\n}));\n\nconst Footer = ({\n  setIsOpen\n}) => __jsx(ModalFooter, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 184\n  },\n  __self: this\n}, __jsx(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 185\n  },\n  __self: this\n}), __jsx(ButtonGroup, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 186\n  },\n  __self: this\n}, __jsx(Button, {\n  appearance: \"primary\",\n  type: \"submit\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 187\n  },\n  __self: this\n}, \"Submit\"), __jsx(Button, {\n  appearance: \"default\",\n  type: \"close\",\n  onClick: () => setIsOpen(false),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 190\n  },\n  __self: this\n}, \"Close\")));\n\nconst footer = setIsOpen => __jsx(ModalFooter, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 202\n  },\n  __self: this\n}, __jsx(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 203\n  },\n  __self: this\n}), __jsx(ButtonGroup, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 204\n  },\n  __self: this\n}, __jsx(Button, {\n  appearance: \"primary\",\n  type: \"submit\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 205\n  },\n  __self: this\n}, \"Submit\"), __jsx(Button, {\n  appearance: \"default\",\n  type: \"close\",\n  onClick: () => setIsOpen(false),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 208\n  },\n  __self: this\n}, \"Close\")));\n\nfunction AssignableUserPicker() {\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_ASSIGNABLE_USERS, {\n    variables: {\n      project: 'GWENT'\n    }\n  });\n  if (error) return __jsx(EmptyState, {\n    name: error.name,\n    message: error.message,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224\n    },\n    __self: this\n  });\n  if (loading || !data) return __jsx(Spinner, {\n    size: \"small\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225\n    },\n    __self: this\n  });\n  return __jsx(UserPicker, {\n    fieldId: \"assignee\",\n    isLoading: loading,\n    options: data && data.resources && data.resources.map(getResource),\n    onChange: value => {\n      console.log(value);\n    },\n    onInputChange: value => {\n      console.log(value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228\n    },\n    __self: this\n  });\n}\n\nfunction TeamPicker({\n  fieldProps\n}) {\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_TEAMS);\n  const options = data && data.teams && data.teams.map(({\n    id\n  }) => ({\n    label: id,\n    value: id\n  }));\n  if (error) return __jsx(EmptyState, {\n    name: error.name,\n    message: error.message,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246\n    },\n    __self: this\n  });\n  if (loading || !data) return __jsx(Spinner, {\n    size: \"small\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247\n    },\n    __self: this\n  });\n  return __jsx(Select, _extends({}, fieldProps, {\n    options: options,\n    placeholder: \"Choose a Team\",\n    defaultValue: options[0],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250\n    },\n    __self: this\n  }));\n}\n\nfunction CreateResourceModal({\n  setIsOpen\n}) {\n  const [insertResource] = useMutation(INSERT_RESOURCE, {\n    onCompleted: ({\n      key\n    }) => {\n      console.log(`Successfully created resource: ${key}`);\n    }\n  });\n  return __jsx(ModalDialog, {\n    heading: \"Create\",\n    scrollBehavior: \"outside\",\n    onClose: () => setIsOpen(false),\n    components: {\n      Container: ({\n        children,\n        className\n      }) => __jsx(Form, {\n        onSubmit: formData => {\n          console.log('form data', formData);\n          const {\n            firstname,\n            lastname,\n            email,\n            team: {\n              value\n            }\n          } = formData;\n          const id = `${firstname.toLowerCase()}.${lastname.toLowerCase()}`;\n          insertResource({\n            variables: {\n              id,\n              firstname,\n              lastname,\n              email,\n              team: value\n            }\n          });\n          setIsOpen(false);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      }, ({\n        formProps\n      }) => __jsx(\"form\", _extends({}, formProps, {\n        className: className,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      }), children)),\n      Footer: () => footer(setIsOpen)\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267\n    },\n    __self: this\n  }, __jsx(Field, {\n    label: \"Assignee\",\n    name: \"assignee\",\n    defaultValue: \"\",\n    placeholder: \"Assignee\",\n    isRequired: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305\n    },\n    __self: this\n  }, ({\n    fieldProps\n  }) => __jsx(AssignableUserPicker, {\n    fieldProps: fieldProps,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312\n    },\n    __self: this\n  })), __jsx(Field, {\n    label: \"Team\",\n    name: \"team\",\n    defaultValue: \"\",\n    placeholder: \"Team\",\n    isRequired: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314\n    },\n    __self: this\n  }, ({\n    fieldProps\n  }) => __jsx(React.Fragment, null, __jsx(TeamPicker, {\n    fieldProps: fieldProps,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323\n    },\n    __self: this\n  }))), __jsx(Footer, {\n    setIsOpen: setIsOpen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327\n    },\n    __self: this\n  }));\n}\n\nfunction EditResourceModal({\n  setIsOpen\n}) {\n  const [updateResource] = useMutation(UPDATE_RESOURCE);\n  const {\n    data\n  } = useQuery(GET_TEAMS);\n  const options = data && data.teams && data.teams.map(({\n    id\n  }) => ({\n    label: id,\n    value: id\n  }));\n  return __jsx(ModalDialog, {\n    heading: \"Edit\",\n    scrollBehavior: \"outside\",\n    onClose: () => setIsOpen(false),\n    components: {\n      Container: ({\n        children,\n        className\n      }) => __jsx(Form, {\n        onSubmit: formData => {\n          console.log('form data', formData);\n          const {\n            firstname,\n            lastname,\n            email,\n            team: {\n              value\n            }\n          } = formData;\n          const id = `${firstname.toLowerCase()}.${lastname.toLowerCase()}`;\n          updateResource({\n            variables: {\n              id,\n              firstname,\n              lastname,\n              email,\n              team: value\n            }\n          });\n          setIsOpen(false);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344\n        },\n        __self: this\n      }, ({\n        formProps\n      }) => __jsx(\"form\", _extends({}, formProps, {\n        className: className,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367\n        },\n        __self: this\n      }), children)),\n      Footer: () => footer(setIsOpen)\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338\n    },\n    __self: this\n  }, __jsx(Field, {\n    label: \"Firstname\",\n    name: \"firstname\",\n    defaultValue: \"Gerald\",\n    placeholder: \"Gerald\",\n    isRequired: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376\n    },\n    __self: this\n  }, ({\n    fieldProps\n  }) => __jsx(TextField, _extends({}, fieldProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383\n    },\n    __self: this\n  }))), __jsx(Field, {\n    label: \"Lastname\",\n    name: \"lastname\",\n    defaultValue: \"Of Rivia\",\n    placeholder: \"Of Rivia\",\n    isRequired: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385\n    },\n    __self: this\n  }, ({\n    fieldProps\n  }) => __jsx(TextField, _extends({}, fieldProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 392\n    },\n    __self: this\n  }))), __jsx(Field, {\n    label: \"Email\",\n    name: \"email\",\n    defaultValue: \"gerald@cdprojektred.com\",\n    placeholder: \"gerald@cdprojektred.com\",\n    isRequired: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 394\n    },\n    __self: this\n  }, ({\n    fieldProps\n  }) => __jsx(TextField, _extends({}, fieldProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 401\n    },\n    __self: this\n  }))), __jsx(Field, {\n    label: \"Team\",\n    name: \"team\",\n    defaultValue: \"Gameplay\",\n    placeholder: \"Team\",\n    isRequired: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 403\n    },\n    __self: this\n  }, ({\n    fieldProps\n  }) => __jsx(Select, _extends({\n    options: options\n  }, fieldProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 410\n    },\n    __self: this\n  }))));\n}\n\nfunction DeleteResourceModal({\n  setIsOpen\n}) {\n  const [deleteResource] = useMutation(DELETE_RESOURCE);\n  return __jsx(ModalDialog, {\n    heading: \"Delete\",\n    onClose: () => setIsOpen(false),\n    components: {\n      Container: ({\n        children,\n        className\n      }) => __jsx(Form, {\n        onSubmit: data => {\n          console.log('form data', data);\n          deleteResource({\n            variables: _objectSpread({}, data)\n          });\n          setIsOpen(false);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 424\n        },\n        __self: this\n      }, ({\n        formProps\n      }) => __jsx(\"form\", _extends({}, formProps, {\n        className: className,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 432\n        },\n        __self: this\n      }), children)),\n      Footer: () => footer(setIsOpen)\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 419\n    },\n    __self: this\n  }, __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 441\n    },\n    __self: this\n  }, \"Are you sure want to delete this resource?\"), __jsx(Field, {\n    label: \"Email\",\n    name: \"email\",\n    defaultValue: \"\",\n    isRequired: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 442\n    },\n    __self: this\n  }, ({\n    fieldProps\n  }) => __jsx(TextField, _extends({\n    placeholder: \"gerald@cdprojektred.com\"\n  }, fieldProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 444\n    },\n    __self: this\n  }))));\n}\n\nfunction Resources({\n  navigationViewController\n}) {\n  const {\n    0: isCreateOpen,\n    1: setIsCreateOpen\n  } = useState(false);\n  const {\n    0: isEditOpen,\n    1: setIsEditOpen\n  } = useState(false);\n  const {\n    0: isDeleteOpen,\n    1: setIsDeleteOpen\n  } = useState(false);\n  useEffect(() => navigationViewController.setView(projectHomeView.id), [navigationViewController]);\n  const {\n    data: teamData\n  } = useQuery(GET_TEAM_FILTER);\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(GET_RESOURCES);\n  let resources = [];\n  if (error) return __jsx(EmptyState, {\n    header: error.name,\n    description: error.message,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 464\n    },\n    __self: this\n  });\n\n  if (!loading && teamData) {\n    resources = teamData.teamId ? data.resources.filter(resource => resource.team === teamData.teamId) : data.resources;\n  }\n\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 472\n    },\n    __self: this\n  }, __jsx(PageHeader, {\n    bottomBar: barContent,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 473\n    },\n    __self: this\n  }, \"Teams\"), __jsx(ButtonGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 474\n    },\n    __self: this\n  }, __jsx(Button, {\n    appearance: \"primary\",\n    onClick: () => setIsCreateOpen(true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 475\n    },\n    __self: this\n  }, \"Create\")), __jsx(DynamicTable, {\n    caption: `${resources.length} people`,\n    head: head,\n    rows: rows(resources, setIsEditOpen, setIsDeleteOpen),\n    rowsPerPage: 20,\n    loadingSpinnerSize: \"large\",\n    isLoading: loading,\n    isFixedSize: true,\n    defaultSortKey: \"name\",\n    defaultSortOrder: \"ASC\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 479\n    },\n    __self: this\n  }), __jsx(ModalTransition, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 490\n    },\n    __self: this\n  }, isCreateOpen && __jsx(CreateResourceModal, {\n    setIsOpen: setIsCreateOpen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 491\n    },\n    __self: this\n  }), isEditOpen && __jsx(EditResourceModal, {\n    setIsOpen: setIsEditOpen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 492\n    },\n    __self: this\n  }), isDeleteOpen && __jsx(DeleteResourceModal, {\n    setIsOpen: setIsDeleteOpen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 493\n    },\n    __self: this\n  })));\n}\n\nResources.propTypes = {\n  navigationViewController: PropTypes.objectOf(PropTypes.arrayOf).isRequired\n};\nexport default withNavigationViewController(Resources);","map":{"version":3,"sources":["/home/davy/planning-app/client/src/pages/resources.js"],"names":["React","useState","useEffect","PropTypes","Link","gql","useQuery","useMutation","styled","withNavigationViewController","DynamicTable","Avatar","EmptyState","PageHeader","TextField","Button","ButtonGroup","ModalDialog","ModalFooter","ModalTransition","Form","Field","Select","UserPicker","Spinner","TeamFilter","projectHomeView","Layout","getResource","GET_TEAM_FILTER","GET_RESOURCES","GET_TEAMS","INSERT_RESOURCE","UPDATE_RESOURCE","DELETE_RESOURCE","GET_ASSIGNABLE_USERS","NameWrapper","span","barContent","display","flexBasis","marginRight","createKey","input","replace","head","cells","key","content","isSortable","width","rows","resources","setIsEditOpen","setIsDeleteOpen","map","name","team","Footer","setIsOpen","footer","AssignableUserPicker","loading","error","data","variables","project","message","value","console","log","TeamPicker","fieldProps","options","teams","id","label","CreateResourceModal","insertResource","onCompleted","Container","children","className","formData","firstname","lastname","email","toLowerCase","formProps","EditResourceModal","updateResource","DeleteResourceModal","deleteResource","Resources","navigationViewController","isCreateOpen","setIsCreateOpen","isEditOpen","isDeleteOpen","setView","teamData","teamId","filter","resource","length","propTypes","objectOf","arrayOf","isRequired"],"mappings":"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","sourcesContent":["/* eslint-disable react/prop-types */\nimport React, { useState, useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'gatsby'\nimport { gql, useQuery, useMutation } from '@apollo/client'\nimport styled from 'styled-components'\nimport { withNavigationViewController } from '@atlaskit/navigation-next'\nimport DynamicTable from '@atlaskit/dynamic-table'\nimport Avatar from '@atlaskit/avatar'\nimport EmptyState from '@atlaskit/empty-state'\nimport PageHeader from '@atlaskit/page-header'\nimport TextField from '@atlaskit/textfield'\nimport Button, { ButtonGroup } from '@atlaskit/button'\nimport ModalDialog, {\n  ModalFooter,\n  ModalTransition,\n} from '@atlaskit/modal-dialog'\nimport Form, { Field } from '@atlaskit/form'\nimport Select from '@atlaskit/select'\nimport UserPicker from '@atlaskit/user-picker'\nimport Spinner from '@atlaskit/spinner'\nimport { TeamFilter, projectHomeView, Layout } from '../components'\nimport { getResource } from '../components/issue/user-picker'\n\nconst GET_TEAM_FILTER = gql`\n  {\n    teamId @client\n  }\n`\n\nconst GET_RESOURCES = gql`\n  query GetResources($teamId: String) {\n    teamId @client @export(as: \"teamId\")\n    resources(teamId: $teamId) {\n      key\n      name\n      team\n    }\n  }\n`\n\nconst GET_TEAMS = gql`\n  query GetTeams {\n    teams {\n      id\n    }\n  }\n`\n\nconst INSERT_RESOURCE = gql`\n  mutation InsertResource(\n    $id: ID!\n    $firstname: String!\n    $lastname: String!\n    $email: String!\n    $team: String!\n  ) {\n    insertResource(\n      id: $id\n      firstname: $firstname\n      lastname: $lastname\n      email: $email\n      team: $team\n    ) {\n      key\n    }\n  }\n`\n\nconst UPDATE_RESOURCE = gql`\n  mutation UpdateResource(\n    $id: ID!\n    $firstname: String!\n    $lastname: String!\n    $email: String!\n    $team: String!\n  ) {\n    updateResource(\n      id: $id\n      firstname: $firstname\n      lastname: $lastname\n      email: $email\n      team: $team\n    ) {\n      key\n    }\n  }\n`\n\nconst DELETE_RESOURCE = gql`\n  mutation DeleteResource($id: ID!) {\n    deleteResource(id: $id) {\n      key\n    }\n  }\n`\n\nconst GET_ASSIGNABLE_USERS = gql`\n  query GetAssignableUsers($project: String) {\n    assignableUsers(project: $project) {\n      key\n      displayName\n    }\n  }\n`\n\nconst NameWrapper = styled.span`\n  display: flex;\n  align-items: center;\n  margin-right: 8px;\n`\n\nconst barContent = (\n  <div style={{ display: 'flex' }}>\n    <div style={{ flexBasis: 150, marginRight: 8 }}>\n      <TextField isCompact placeholder=\"Filter\" aria-label=\"Filter\" />\n    </div>\n    <TeamFilter />\n  </div>\n)\n\nfunction createKey(input) {\n  return input ? input.replace(/^(the|a|an)/, '').replace(/\\s/g, '') : input\n}\n\nconst head = {\n  cells: [\n    {\n      key: 'name',\n      content: 'Name',\n      isSortable: true,\n    },\n    {\n      key: 'team',\n      content: 'Team',\n      isSortable: true,\n      width: 15,\n    },\n    {\n      key: 'actions',\n      content: 'Actions',\n      width: 15,\n    },\n  ],\n}\n\nconst rows = (resources, setIsEditOpen, setIsDeleteOpen) => resources.map(({ key, name, team }) => ({\n  key,\n  cells: [\n    {\n      key: createKey(name),\n      content: (\n        <NameWrapper>\n          <Avatar\n            name={name}\n            size=\"medium\"\n            src={`https://jira.cdprojektred.com//secure/useravatar?ownerId=${key}`}\n          />\n          <Link to={`/resource/${key}`}>{name}</Link>\n        </NameWrapper>\n      ),\n    },\n    {\n      key: createKey(team),\n      content: team,\n    },\n    {\n      key: 'actions',\n      content: (\n        <ButtonGroup>\n          <Button appearance=\"default\" onClick={() => setIsEditOpen(true)}>\n            Edit\n          </Button>\n          <Button appearance=\"default\" onClick={() => setIsDeleteOpen(true)}>\n            Delete\n          </Button>\n        </ButtonGroup>\n      ),\n    },\n  ],\n}))\n\nconst Footer = ({ setIsOpen }) => (\n  <ModalFooter>\n    <span />\n    <ButtonGroup>\n      <Button appearance=\"primary\" type=\"submit\">\n        Submit\n      </Button>\n      <Button\n        appearance=\"default\"\n        type=\"close\"\n        onClick={() => setIsOpen(false)}\n      >\n        Close\n      </Button>\n    </ButtonGroup>\n  </ModalFooter>\n)\n\nconst footer = (setIsOpen) => (\n  <ModalFooter>\n    <span />\n    <ButtonGroup>\n      <Button appearance=\"primary\" type=\"submit\">\n        Submit\n      </Button>\n      <Button\n        appearance=\"default\"\n        type=\"close\"\n        onClick={() => setIsOpen(false)}\n      >\n        Close\n      </Button>\n    </ButtonGroup>\n  </ModalFooter>\n)\n\nfunction AssignableUserPicker() {\n  const { loading, error, data } = useQuery(GET_ASSIGNABLE_USERS, {\n    variables: { project: 'GWENT' },\n  })\n\n  if (error) return <EmptyState name={error.name} message={error.message} />\n  if (loading || !data) return <Spinner size=\"small\" />\n\n  return (\n    <UserPicker\n      fieldId=\"assignee\"\n      isLoading={loading}\n      options={data && data.resources && data.resources.map(getResource)}\n      onChange={(value) => {\n        console.log(value)\n      }}\n      onInputChange={(value) => {\n        console.log(value)\n      }}\n    />\n  )\n}\n\nfunction TeamPicker({ fieldProps }) {\n  const { loading, error, data } = useQuery(GET_TEAMS)\n  const options = data && data.teams && data.teams.map(({ id }) => ({ label: id, value: id }))\n\n  if (error) return <EmptyState name={error.name} message={error.message} />\n  if (loading || !data) return <Spinner size=\"small\" />\n\n  return (\n    <Select\n      {...fieldProps}\n      options={options}\n      placeholder=\"Choose a Team\"\n      defaultValue={options[0]}\n    />\n  )\n}\n\nfunction CreateResourceModal({ setIsOpen }) {\n  const [insertResource] = useMutation(INSERT_RESOURCE, {\n    onCompleted: ({ key }) => {\n      console.log(`Successfully created resource: ${key}`)\n    },\n  })\n\n  return (\n    <ModalDialog\n      heading=\"Create\"\n      scrollBehavior=\"outside\"\n      onClose={() => setIsOpen(false)}\n      components={{\n        Container: ({ children, className }) => (\n          <Form\n            onSubmit={(formData) => {\n              console.log('form data', formData)\n              const {\n                firstname,\n                lastname,\n                email,\n                team: { value },\n              } = formData\n              const id = `${firstname.toLowerCase()}.${lastname.toLowerCase()}`\n              insertResource({\n                variables: {\n                  id,\n                  firstname,\n                  lastname,\n                  email,\n                  team: value,\n                },\n              })\n              setIsOpen(false)\n            }}\n          >\n            {({ formProps }) => (\n              <form {...formProps} className={className}>\n                {children}\n              </form>\n            )}\n          </Form>\n        ),\n        Footer: () => footer(setIsOpen),\n      }}\n    >\n      <Field\n        label=\"Assignee\"\n        name=\"assignee\"\n        defaultValue=\"\"\n        placeholder=\"Assignee\"\n        isRequired\n      >\n        {({ fieldProps }) => <AssignableUserPicker fieldProps={fieldProps} />}\n      </Field>\n      <Field\n        label=\"Team\"\n        name=\"team\"\n        defaultValue=\"\"\n        placeholder=\"Team\"\n        isRequired\n      >\n        {({ fieldProps }) => (\n          <>\n            <TeamPicker fieldProps={fieldProps} />\n          </>\n        )}\n      </Field>\n      <Footer setIsOpen={setIsOpen} />\n    </ModalDialog>\n  )\n}\n\nfunction EditResourceModal({ setIsOpen }) {\n  const [updateResource] = useMutation(UPDATE_RESOURCE)\n  const { data } = useQuery(GET_TEAMS)\n  const options = data && data.teams && data.teams.map(({ id }) => ({ label: id, value: id }))\n\n  return (\n    <ModalDialog\n      heading=\"Edit\"\n      scrollBehavior=\"outside\"\n      onClose={() => setIsOpen(false)}\n      components={{\n        Container: ({ children, className }) => (\n          <Form\n            onSubmit={(formData) => {\n              console.log('form data', formData)\n              const {\n                firstname,\n                lastname,\n                email,\n                team: { value },\n              } = formData\n              const id = `${firstname.toLowerCase()}.${lastname.toLowerCase()}`\n              updateResource({\n                variables: {\n                  id,\n                  firstname,\n                  lastname,\n                  email,\n                  team: value,\n                },\n              })\n              setIsOpen(false)\n            }}\n          >\n            {({ formProps }) => (\n              <form {...formProps} className={className}>\n                {children}\n              </form>\n            )}\n          </Form>\n        ),\n        Footer: () => footer(setIsOpen),\n      }}\n    >\n      <Field\n        label=\"Firstname\"\n        name=\"firstname\"\n        defaultValue=\"Gerald\"\n        placeholder=\"Gerald\"\n        isRequired\n      >\n        {({ fieldProps }) => <TextField {...fieldProps} />}\n      </Field>\n      <Field\n        label=\"Lastname\"\n        name=\"lastname\"\n        defaultValue=\"Of Rivia\"\n        placeholder=\"Of Rivia\"\n        isRequired\n      >\n        {({ fieldProps }) => <TextField {...fieldProps} />}\n      </Field>\n      <Field\n        label=\"Email\"\n        name=\"email\"\n        defaultValue=\"gerald@cdprojektred.com\"\n        placeholder=\"gerald@cdprojektred.com\"\n        isRequired\n      >\n        {({ fieldProps }) => <TextField {...fieldProps} />}\n      </Field>\n      <Field\n        label=\"Team\"\n        name=\"team\"\n        defaultValue=\"Gameplay\"\n        placeholder=\"Team\"\n        isRequired\n      >\n        {({ fieldProps }) => <Select options={options} {...fieldProps} />}\n      </Field>\n    </ModalDialog>\n  )\n}\n\nfunction DeleteResourceModal({ setIsOpen }) {\n  const [deleteResource] = useMutation(DELETE_RESOURCE)\n  return (\n    <ModalDialog\n      heading=\"Delete\"\n      onClose={() => setIsOpen(false)}\n      components={{\n        Container: ({ children, className }) => (\n          <Form\n            onSubmit={(data) => {\n              console.log('form data', data)\n              deleteResource({ variables: { ...data } })\n              setIsOpen(false)\n            }}\n          >\n            {({ formProps }) => (\n              <form {...formProps} className={className}>\n                {children}\n              </form>\n            )}\n          </Form>\n        ),\n        Footer: () => footer(setIsOpen),\n      }}\n    >\n      <p>Are you sure want to delete this resource?</p>\n      <Field label=\"Email\" name=\"email\" defaultValue=\"\" isRequired>\n        {({ fieldProps }) => (\n          <TextField placeholder=\"gerald@cdprojektred.com\" {...fieldProps} />\n        )}\n      </Field>\n    </ModalDialog>\n  )\n}\n\nfunction Resources({ navigationViewController }) {\n  const [isCreateOpen, setIsCreateOpen] = useState(false)\n  const [isEditOpen, setIsEditOpen] = useState(false)\n  const [isDeleteOpen, setIsDeleteOpen] = useState(false)\n\n  useEffect(() => navigationViewController.setView(projectHomeView.id), [\n    navigationViewController,\n  ])\n\n  const { data: teamData } = useQuery(GET_TEAM_FILTER)\n  const { data, loading, error } = useQuery(GET_RESOURCES)\n\n  let resources = []\n  if (error) return <EmptyState header={error.name} description={error.message} />\n  if (!loading && teamData) {\n    resources = teamData.teamId\n      ? data.resources.filter((resource) => resource.team === teamData.teamId)\n      : data.resources\n  }\n\n  return (\n    <Layout>\n      <PageHeader bottomBar={barContent}>Teams</PageHeader>\n      <ButtonGroup>\n        <Button appearance=\"primary\" onClick={() => setIsCreateOpen(true)}>\n          Create\n        </Button>\n      </ButtonGroup>\n      <DynamicTable\n        caption={`${resources.length} people`}\n        head={head}\n        rows={rows(resources, setIsEditOpen, setIsDeleteOpen)}\n        rowsPerPage={20}\n        loadingSpinnerSize=\"large\"\n        isLoading={loading}\n        isFixedSize\n        defaultSortKey=\"name\"\n        defaultSortOrder=\"ASC\"\n      />\n      <ModalTransition>\n        {isCreateOpen && <CreateResourceModal setIsOpen={setIsCreateOpen} />}\n        {isEditOpen && <EditResourceModal setIsOpen={setIsEditOpen} />}\n        {isDeleteOpen && <DeleteResourceModal setIsOpen={setIsDeleteOpen} />}\n      </ModalTransition>\n    </Layout>\n  )\n}\n\nResources.propTypes = {\n  navigationViewController: PropTypes.objectOf(PropTypes.arrayOf).isRequired,\n}\n\nexport default withNavigationViewController(Resources)\n"]},"metadata":{},"sourceType":"module"}