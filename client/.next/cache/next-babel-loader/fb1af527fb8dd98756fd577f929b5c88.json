{"ast":null,"code":"var _jsxFileName = \"/home/davy/planning-app/client/src/pages/absences.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useQuery, gql } from '@apollo/client';\nimport Select from 'react-select';\nimport Layout from '../components/MyLayout';\nexport const GET_ABSENCES = gql`\n  query getAbsences($id: ID!) {\n    absences(id: $id) {\n      date\n    }\n  }\n`;\nconst options = [{\n  value: 'chocolate',\n  label: 'Chocolate'\n}, {\n  value: 'strawberry',\n  label: 'Strawberry'\n}, {\n  value: 'vanilla',\n  label: 'Vanilla'\n}];\nexport default (() => {\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_ABSENCES, {\n    variables: {\n      id: 'davy.hausser'\n    }\n  });\n  if (loading) return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"Loading\");\n\n  if (error) {\n    return __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, \"Error:\", ' ', error.message);\n  }\n\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Absences\"), __jsx(Select, {\n    options: options,\n    label: \"Single select\",\n    styles: {\n      width: '2rem'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, data.absences.map(({\n    date\n  }) => __jsx(\"li\", {\n    key: date,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, `${date}`))));\n});","map":{"version":3,"sources":["/home/davy/planning-app/client/src/pages/absences.js"],"names":["useQuery","gql","Select","Layout","GET_ABSENCES","options","value","label","loading","error","data","variables","id","message","width","absences","map","date"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,GAAnB,QAA8B,gBAA9B;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AAEA,OAAO,MAAMC,YAAY,GAAGH,GAAI;;;;;;CAAzB;AAQP,MAAMI,OAAO,GAAG,CACd;AAAEC,EAAAA,KAAK,EAAE,WAAT;AAAsBC,EAAAA,KAAK,EAAE;AAA7B,CADc,EAEd;AAAED,EAAAA,KAAK,EAAE,YAAT;AAAuBC,EAAAA,KAAK,EAAE;AAA9B,CAFc,EAGd;AAAED,EAAAA,KAAK,EAAE,SAAT;AAAoBC,EAAAA,KAAK,EAAE;AAA3B,CAHc,CAAhB;AAMA,gBAAe,MAAM;AACnB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BV,QAAQ,CAACI,YAAD,EAAe;AAAEO,IAAAA,SAAS,EAAE;AAAEC,MAAAA,EAAE,EAAE;AAAN;AAAb,GAAf,CAAzC;AACA,MAAIJ,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAP;;AACb,MAAIC,KAAJ,EAAW;AACT,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAEG,GAFH,EAGGA,KAAK,CAACI,OAHT,CADF;AAOD;;AACD,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAER,OAAjB;AAA0B,IAAA,KAAK,EAAC,eAAhC;AAAgD,IAAA,MAAM,EAAE;AAAES,MAAAA,KAAK,EAAE;AAAT,KAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,IAAI,CAACK,QAAL,CAAcC,GAAd,CAAkB,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAc;AAAI,IAAA,GAAG,EAAEA,IAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiB,GAAEA,IAAK,EAAxB,CAAhC,CADH,CAHF,CADF;AASD,CArBD","sourcesContent":["import { useQuery, gql } from '@apollo/client'\nimport Select from 'react-select'\nimport Layout from '../components/MyLayout'\n\nexport const GET_ABSENCES = gql`\n  query getAbsences($id: ID!) {\n    absences(id: $id) {\n      date\n    }\n  }\n`\n\nconst options = [\n  { value: 'chocolate', label: 'Chocolate' },\n  { value: 'strawberry', label: 'Strawberry' },\n  { value: 'vanilla', label: 'Vanilla' },\n]\n\nexport default () => {\n  const { loading, error, data } = useQuery(GET_ABSENCES, { variables: { id: 'davy.hausser' } })\n  if (loading) return <p>Loading</p>\n  if (error) {\n    return (\n      <p>\n        Error:\n        {' '}\n        {error.message}\n      </p>\n    )\n  }\n  return (\n    <Layout>\n      <h1>Absences</h1>\n      <Select options={options} label=\"Single select\" styles={{ width: '2rem' }} />\n      <ul>\n        {data.absences.map(({ date }) => <li key={date}>{`${date}`}</li>)}\n      </ul>\n    </Layout>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}