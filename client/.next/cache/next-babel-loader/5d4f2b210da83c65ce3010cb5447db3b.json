{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/davy/planning-app/client/src/pages/roadmap.js\";\nvar __jsx = React.createElement;\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n  query issueList($projectId: String, $versionId: String) {\\n    projectId @client @export(as: \\\"projectId\\\")\\n    versionId @client @export(as: \\\"versionId\\\")\\n    epics(projectId: $projectId, versionId: $versionId) {\\n      id\\n      key\\n      fields {\\n        summary\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: column;\\n  padding: 0px 0px 0px 40px;\\n  box-sizing: border-box;\\n  height: 100vh;\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useEffect } from 'react';\nimport { gql, useQuery } from '@apollo/client';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { withNavigationViewController } from '@atlaskit/navigation-next';\nimport { BreadcrumbsStateless, BreadcrumbsItem } from '@atlaskit/breadcrumbs';\nimport PageHeader from '@atlaskit/page-header';\nimport { Layout, projectHomeView, Loading, Error, ProjectFilter, VersionFilter, Timeline } from '../components';\nconst Padding = styled.div(_templateObject());\nconst GET_ISSUES = gql(_templateObject2());\n\nconst barContent = __jsx(\"div\", {\n  style: {\n    display: 'flex'\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 42\n  },\n  __self: this\n}, __jsx(ProjectFilter, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43\n  },\n  __self: this\n}), __jsx(VersionFilter, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 44\n  },\n  __self: this\n}));\n\nconst breadcrumbs = __jsx(BreadcrumbsStateless, {\n  onExpand: () => {},\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 49\n  },\n  __self: this\n}, __jsx(BreadcrumbsItem, {\n  text: \"Projects\",\n  key: \"Projects\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 50\n  },\n  __self: this\n}), __jsx(BreadcrumbsItem, {\n  text: \"Gwent\",\n  key: \"Gwent\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 51\n  },\n  __self: this\n}));\n\nfunction Roadmap({\n  navigationViewController\n}) {\n  useEffect(() => navigationViewController.setView(projectHomeView.id), [navigationViewController]);\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_ISSUES);\n  if (error) return __jsx(Error, {\n    error: error.name,\n    message: error.message,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  });\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, __jsx(Padding, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, __jsx(PageHeader, {\n    breadcrumbs: breadcrumbs,\n    bottomBar: barContent,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"Roadmap\"), loading ? __jsx(Loading, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }) : __jsx(Timeline, {\n    epics: data.epics,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  })));\n}\n\nRoadmap.propTypes = {\n  navigationViewController: PropTypes.objectOf(PropTypes.arrayOf).isRequired\n};\nexport default withNavigationViewController(Roadmap);","map":{"version":3,"sources":["/home/davy/planning-app/client/src/pages/roadmap.js"],"names":["React","useEffect","gql","useQuery","PropTypes","styled","withNavigationViewController","BreadcrumbsStateless","BreadcrumbsItem","PageHeader","Layout","projectHomeView","Loading","Error","ProjectFilter","VersionFilter","Timeline","Padding","div","GET_ISSUES","barContent","display","breadcrumbs","Roadmap","navigationViewController","setView","id","loading","error","data","name","message","epics","propTypes","objectOf","arrayOf","isRequired"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,GAAT,EAAcC,QAAd,QAA8B,gBAA9B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,4BAAT,QAA6C,2BAA7C;AACA,SAASC,oBAAT,EAA+BC,eAA/B,QAAsD,uBAAtD;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,SACEC,MADF,EAEEC,eAFF,EAGEC,OAHF,EAIEC,KAJF,EAKEC,aALF,EAMEC,aANF,EAOEC,QAPF,QAQO,eARP;AAWA,MAAMC,OAAO,GAAGZ,MAAM,CAACa,GAAV,mBAAb;AAQA,MAAMC,UAAU,GAAGjB,GAAH,oBAAhB;;AAcA,MAAMkB,UAAU,GACd;AAAK,EAAA,KAAK,EAAE;AAAEC,IAAAA,OAAO,EAAE;AAAX,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EAEE,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFF,CADF;;AAOA,MAAMC,WAAW,GACf,MAAC,oBAAD;AAAsB,EAAA,QAAQ,EAAE,MAAM,CAAE,CAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,MAAC,eAAD;AAAiB,EAAA,IAAI,EAAC,UAAtB;AAAiC,EAAA,GAAG,EAAC,UAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EAEE,MAAC,eAAD;AAAiB,EAAA,IAAI,EAAC,OAAtB;AAA8B,EAAA,GAAG,EAAC,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFF,CADF;;AAOA,SAASC,OAAT,CAAiB;AAAEC,EAAAA;AAAF,CAAjB,EAA+C;AAC7CvB,EAAAA,SAAS,CAAC,MAAMuB,wBAAwB,CAACC,OAAzB,CAAiCd,eAAe,CAACe,EAAjD,CAAP,EAA6D,CACpEF,wBADoE,CAA7D,CAAT;AAGA,QAAM;AAAEG,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2B1B,QAAQ,CAACgB,UAAD,CAAzC;AAEA,MAAIS,KAAJ,EAAW,OAAO,MAAC,KAAD;AAAO,IAAA,KAAK,EAAEA,KAAK,CAACE,IAApB;AAA0B,IAAA,OAAO,EAAEF,KAAK,CAACG,OAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AAEX,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AAAY,IAAA,WAAW,EAAET,WAAzB;AAAsC,IAAA,SAAS,EAAEF,UAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAIGO,OAAO,GAAG,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAAiB,MAAC,QAAD;AAAU,IAAA,KAAK,EAAEE,IAAI,CAACG,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJ3B,CADF,CADF;AAUD;;AAEDT,OAAO,CAACU,SAAR,GAAoB;AAClBT,EAAAA,wBAAwB,EAAEpB,SAAS,CAAC8B,QAAV,CAAmB9B,SAAS,CAAC+B,OAA7B,EAAsCC;AAD9C,CAApB;AAIA,eAAe9B,4BAA4B,CAACiB,OAAD,CAA3C","sourcesContent":["import React, { useEffect } from 'react'\nimport { gql, useQuery } from '@apollo/client'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport { withNavigationViewController } from '@atlaskit/navigation-next'\nimport { BreadcrumbsStateless, BreadcrumbsItem } from '@atlaskit/breadcrumbs'\nimport PageHeader from '@atlaskit/page-header'\nimport {\n  Layout,\n  projectHomeView,\n  Loading,\n  Error,\n  ProjectFilter,\n  VersionFilter,\n  Timeline,\n} from '../components'\n\n\nconst Padding = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 0px 0px 0px 40px;\n  box-sizing: border-box;\n  height: 100vh;\n`\n\nconst GET_ISSUES = gql`\n  query issueList($projectId: String, $versionId: String) {\n    projectId @client @export(as: \"projectId\")\n    versionId @client @export(as: \"versionId\")\n    epics(projectId: $projectId, versionId: $versionId) {\n      id\n      key\n      fields {\n        summary\n      }\n    }\n  }\n`\n\nconst barContent = (\n  <div style={{ display: 'flex' }}>\n    <ProjectFilter />\n    <VersionFilter />\n  </div>\n)\n\nconst breadcrumbs = (\n  <BreadcrumbsStateless onExpand={() => {}}>\n    <BreadcrumbsItem text=\"Projects\" key=\"Projects\" />\n    <BreadcrumbsItem text=\"Gwent\" key=\"Gwent\" />\n  </BreadcrumbsStateless>\n)\n\nfunction Roadmap({ navigationViewController }) {\n  useEffect(() => navigationViewController.setView(projectHomeView.id), [\n    navigationViewController,\n  ])\n  const { loading, error, data } = useQuery(GET_ISSUES)\n\n  if (error) return <Error error={error.name} message={error.message} />\n\n  return (\n    <Layout>\n      <Padding>\n        <PageHeader breadcrumbs={breadcrumbs} bottomBar={barContent}>\n          Roadmap\n        </PageHeader>\n        {loading ? <Loading /> : <Timeline epics={data.epics} />}\n      </Padding>\n    </Layout>\n  )\n}\n\nRoadmap.propTypes = {\n  navigationViewController: PropTypes.objectOf(PropTypes.arrayOf).isRequired,\n}\n\nexport default withNavigationViewController(Roadmap)\n"]},"metadata":{},"sourceType":"module"}